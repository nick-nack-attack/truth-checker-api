function cov_1w66f8wjf3(){var path="/Users/nickfarni/WebstormProjects/truth-checker-api/src/middleware/check-if-exists.js";var hash="d59de85af8f968452d9f058aa87e311fe6af4ca0";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/nickfarni/WebstormProjects/truth-checker-api/src/middleware/check-if-exists.js",statementMap:{"0":{start:{line:2,column:26},end:{line:2,column:59}},"1":{start:{line:3,column:26},end:{line:3,column:63}},"2":{start:{line:5,column:24},end:{line:21,column:1}},"3":{start:{line:6,column:4},end:{line:20,column:5}},"4":{start:{line:7,column:21},end:{line:7,column:73}},"5":{start:{line:8,column:8},end:{line:17,column:9}},"6":{start:{line:9,column:12},end:{line:13,column:18}},"7":{start:{line:15,column:12},end:{line:15,column:28}},"8":{start:{line:16,column:12},end:{line:16,column:19}},"9":{start:{line:19,column:8},end:{line:19,column:20}},"10":{start:{line:23,column:26},end:{line:39,column:1}},"11":{start:{line:24,column:4},end:{line:38,column:5}},"12":{start:{line:25,column:23},end:{line:25,column:81}},"13":{start:{line:26,column:8},end:{line:35,column:9}},"14":{start:{line:27,column:12},end:{line:31,column:18}},"15":{start:{line:33,column:12},end:{line:33,column:32}},"16":{start:{line:34,column:12},end:{line:34,column:19}},"17":{start:{line:37,column:8},end:{line:37,column:20}},"18":{start:{line:41,column:0},end:{line:44,column:1}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:5,column:24},end:{line:5,column:25}},loc:{start:{line:5,column:50},end:{line:21,column:1}},line:5},"1":{name:"(anonymous_1)",decl:{start:{line:23,column:26},end:{line:23,column:27}},loc:{start:{line:23,column:52},end:{line:39,column:1}},line:23}},branchMap:{"0":{loc:{start:{line:8,column:8},end:{line:17,column:9}},type:"if",locations:[{start:{line:8,column:8},end:{line:17,column:9}},{start:{line:8,column:8},end:{line:17,column:9}}],line:8},"1":{loc:{start:{line:26,column:8},end:{line:35,column:9}},type:"if",locations:[{start:{line:26,column:8},end:{line:35,column:9}},{start:{line:26,column:8},end:{line:35,column:9}}],line:26}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d59de85af8f968452d9f058aa87e311fe6af4ca0"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1w66f8wjf3=function(){return actualCoverage;};}return actualCoverage;}cov_1w66f8wjf3();// if a value is missing from the request body then return error
const FactsService=(cov_1w66f8wjf3().s[0]++,require('../facts/facts-service'));const ReportsService=(cov_1w66f8wjf3().s[1]++,require("../reports/reports-service"));cov_1w66f8wjf3().s[2]++;const checkFactExists=async(req,res,next)=>{cov_1w66f8wjf3().f[0]++;cov_1w66f8wjf3().s[3]++;try{const fact=(cov_1w66f8wjf3().s[4]++,await FactsService.getFactById(req.params.fact_id));cov_1w66f8wjf3().s[5]++;if(!fact){cov_1w66f8wjf3().b[0][0]++;cov_1w66f8wjf3().s[6]++;return res.status(404).json({error:`Fact doesn't exist`});}else{cov_1w66f8wjf3().b[0][1]++;cov_1w66f8wjf3().s[7]++;res.fact=fact;cov_1w66f8wjf3().s[8]++;next();}}catch(error){cov_1w66f8wjf3().s[9]++;next(error);}};cov_1w66f8wjf3().s[10]++;const checkReportExists=async(req,res,next)=>{cov_1w66f8wjf3().f[1]++;cov_1w66f8wjf3().s[11]++;try{const report=(cov_1w66f8wjf3().s[12]++,await ReportsService.getReportById(req.params.report_id));cov_1w66f8wjf3().s[13]++;if(!report){cov_1w66f8wjf3().b[1][0]++;cov_1w66f8wjf3().s[14]++;return res.status(404).json({error:`Report doesn't exist`});}else{cov_1w66f8wjf3().b[1][1]++;cov_1w66f8wjf3().s[15]++;res.report=report;cov_1w66f8wjf3().s[16]++;next();}}catch(error){cov_1w66f8wjf3().s[17]++;next(error);}};cov_1w66f8wjf3().s[18]++;module.exports={checkFactExists,checkReportExists};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrLWlmLWV4aXN0cy5qcyJdLCJuYW1lcyI6WyJGYWN0c1NlcnZpY2UiLCJyZXF1aXJlIiwiUmVwb3J0c1NlcnZpY2UiLCJjaGVja0ZhY3RFeGlzdHMiLCJyZXEiLCJyZXMiLCJuZXh0IiwiZmFjdCIsImdldEZhY3RCeUlkIiwicGFyYW1zIiwiZmFjdF9pZCIsInN0YXR1cyIsImpzb24iLCJlcnJvciIsImNoZWNrUmVwb3J0RXhpc3RzIiwicmVwb3J0IiwiZ2V0UmVwb3J0QnlJZCIsInJlcG9ydF9pZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJrK0VBZVk7MkZBZlo7QUFDQSxLQUFNQSxDQUFBQSxZQUFZLDBCQUFRQyxPQUFPLENBQUMsd0JBQUQsQ0FBZixDQUFsQixDQUNBLEtBQU1DLENBQUFBLGNBQWMsMEJBQU1ELE9BQU8sQ0FBQyw0QkFBRCxDQUFiLENBQXBCLEMsd0JBRUEsS0FBTUUsQ0FBQUEsZUFBZSxDQUFHLE1BQU9DLEdBQVAsQ0FBWUMsR0FBWixDQUFpQkMsSUFBakIsR0FBMEIsaURBQzlDLEdBQUksQ0FDQSxLQUFNQyxDQUFBQSxJQUFJLDBCQUFHLEtBQU1QLENBQUFBLFlBQVksQ0FBQ1EsV0FBYixDQUEwQkosR0FBRyxDQUFDSyxNQUFKLENBQVdDLE9BQXJDLENBQVQsQ0FBVixDQURBLHdCQUVBLEdBQUksQ0FBQ0gsSUFBTCxDQUFXLG9EQUNQLE1BQU9GLENBQUFBLEdBQUcsQ0FDTE0sTUFERSxDQUNLLEdBREwsRUFFRkMsSUFGRSxDQUVHLENBQ0ZDLEtBQUssQ0FBRyxvQkFETixDQUZILENBQVAsQ0FLSCxDQU5ELElBTU8sb0RBQ0hSLEdBQUcsQ0FBQ0UsSUFBSixDQUFXQSxJQUFYLENBREcsd0JBRUhELElBQUksR0FDUCxDQUNKLENBQUMsTUFBT08sS0FBUCxDQUFjLHlCQUNaUCxJQUFJLENBQUNPLEtBQUQsQ0FBSixDQUNILENBQ0osQ0FoQkQsQyx5QkFrQkEsS0FBTUMsQ0FBQUEsaUJBQWlCLENBQUcsTUFBT1YsR0FBUCxDQUFZQyxHQUFaLENBQWlCQyxJQUFqQixHQUEwQixrREFDaEQsR0FBSSxDQUNBLEtBQU1TLENBQUFBLE1BQU0sMkJBQUcsS0FBTWIsQ0FBQUEsY0FBYyxDQUFDYyxhQUFmLENBQThCWixHQUFHLENBQUNLLE1BQUosQ0FBV1EsU0FBekMsQ0FBVCxDQUFaLENBREEseUJBRUEsR0FBSSxDQUFDRixNQUFMLENBQWEscURBQ1QsTUFBT1YsQ0FBQUEsR0FBRyxDQUNMTSxNQURFLENBQ0ssR0FETCxFQUVGQyxJQUZFLENBRUcsQ0FDRkMsS0FBSyxDQUFHLHNCQUROLENBRkgsQ0FBUCxDQUtILENBTkQsSUFNTyxxREFDSFIsR0FBRyxDQUFDVSxNQUFKLENBQWFBLE1BQWIsQ0FERyx5QkFFSFQsSUFBSSxHQUNQLENBQ0osQ0FBQyxNQUFPTyxLQUFQLENBQWMsMEJBQ1pQLElBQUksQ0FBQ08sS0FBRCxDQUFKLENBQ0gsQ0FDSixDQWhCRCxDLHlCQWtCQUssTUFBTSxDQUFDQyxPQUFQLENBQWlCLENBQ2JoQixlQURhLENBRWJXLGlCQUZhLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaWYgYSB2YWx1ZSBpcyBtaXNzaW5nIGZyb20gdGhlIHJlcXVlc3QgYm9keSB0aGVuIHJldHVybiBlcnJvclxuY29uc3QgRmFjdHNTZXJ2aWNlICAgICAgPSByZXF1aXJlKCcuLi9mYWN0cy9mYWN0cy1zZXJ2aWNlJyk7XG5jb25zdCBSZXBvcnRzU2VydmljZSAgICA9IHJlcXVpcmUoXCIuLi9yZXBvcnRzL3JlcG9ydHMtc2VydmljZVwiKTtcblxuY29uc3QgY2hlY2tGYWN0RXhpc3RzID0gYXN5bmMgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgZmFjdCA9IGF3YWl0IEZhY3RzU2VydmljZS5nZXRGYWN0QnlJZCggcmVxLnBhcmFtcy5mYWN0X2lkICk7XG4gICAgICAgIGlmICghZmFjdCkge1xuICAgICAgICAgICAgcmV0dXJuIHJlc1xuICAgICAgICAgICAgICAgIC5zdGF0dXMoNDA0KVxuICAgICAgICAgICAgICAgIC5qc29uKHtcbiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGBGYWN0IGRvZXNuJ3QgZXhpc3RgXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlcy5mYWN0ID0gZmFjdDtcbiAgICAgICAgICAgIG5leHQoKTtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIG5leHQoZXJyb3IpO1xuICAgIH1cbn07XG5cbmNvbnN0IGNoZWNrUmVwb3J0RXhpc3RzID0gYXN5bmMgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVwb3J0ID0gYXdhaXQgUmVwb3J0c1NlcnZpY2UuZ2V0UmVwb3J0QnlJZCggcmVxLnBhcmFtcy5yZXBvcnRfaWQgKTtcbiAgICAgICAgaWYgKCFyZXBvcnQpIHtcbiAgICAgICAgICAgIHJldHVybiByZXNcbiAgICAgICAgICAgICAgICAuc3RhdHVzKDQwNClcbiAgICAgICAgICAgICAgICAuanNvbih7XG4gICAgICAgICAgICAgICAgICAgIGVycm9yOiBgUmVwb3J0IGRvZXNuJ3QgZXhpc3RgXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlcy5yZXBvcnQgPSByZXBvcnQ7XG4gICAgICAgICAgICBuZXh0KCk7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBuZXh0KGVycm9yKTtcbiAgICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBjaGVja0ZhY3RFeGlzdHMsXG4gICAgY2hlY2tSZXBvcnRFeGlzdHNcbn1cblxuIl19
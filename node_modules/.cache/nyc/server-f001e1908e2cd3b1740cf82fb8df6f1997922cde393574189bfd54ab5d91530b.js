function cov_275r02uds8(){var path="/Users/nickfarni/WebstormProjects/truth-checker-api/src/server.js";var hash="954117e10593a513da34124873b31e4cab1a0efd";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/nickfarni/WebstormProjects/truth-checker-api/src/server.js",statementMap:{"0":{start:{line:4,column:0},end:{line:4,column:27}},"1":{start:{line:6,column:16},end:{line:6,column:34}},"2":{start:{line:7,column:16},end:{line:7,column:25}},"3":{start:{line:10,column:21},end:{line:10,column:58}},"4":{start:{line:13,column:28},end:{line:13,column:47}},"5":{start:{line:14,column:28},end:{line:14,column:73}},"6":{start:{line:18,column:16},end:{line:18,column:33}},"7":{start:{line:19,column:16},end:{line:19,column:31}},"8":{start:{line:20,column:16},end:{line:20,column:33}},"9":{start:{line:26,column:0},end:{line:26,column:22}},"10":{start:{line:27,column:0},end:{line:27,column:30}},"11":{start:{line:28,column:0},end:{line:28,column:16}},"12":{start:{line:29,column:0},end:{line:29,column:18}},"13":{start:{line:32,column:22},end:{line:32,column:53}},"14":{start:{line:33,column:22},end:{line:33,column:53}},"15":{start:{line:34,column:22},end:{line:34,column:51}},"16":{start:{line:35,column:22},end:{line:35,column:57}},"17":{start:{line:38,column:0},end:{line:38,column:35}},"18":{start:{line:39,column:0},end:{line:39,column:35}},"19":{start:{line:40,column:0},end:{line:40,column:33}},"20":{start:{line:41,column:0},end:{line:41,column:39}},"21":{start:{line:44,column:0},end:{line:46,column:3}},"22":{start:{line:45,column:2},end:{line:45,column:49}},"23":{start:{line:49,column:0},end:{line:53,column:3}},"24":{start:{line:50,column:2},end:{line:52,column:68}},"25":{start:{line:55,column:0},end:{line:55,column:21}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:44,column:17},end:{line:44,column:18}},loc:{start:{line:44,column:23},end:{line:46,column:1}},line:44},"1":{name:"(anonymous_1)",decl:{start:{line:49,column:13},end:{line:49,column:14}},loc:{start:{line:49,column:27},end:{line:53,column:1}},line:49}},branchMap:{"0":{loc:{start:{line:14,column:28},end:{line:14,column:73}},type:"cond-expr",locations:[{start:{line:14,column:56},end:{line:14,column:62}},{start:{line:14,column:65},end:{line:14,column:73}}],line:14}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},f:{"0":0,"1":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"954117e10593a513da34124873b31e4cab1a0efd"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_275r02uds8=function(){return actualCoverage;};}return actualCoverage;}cov_275r02uds8();cov_275r02uds8().s[0]++;// server entry point
// use env file
require('dotenv').config();const express=(cov_275r02uds8().s[1]++,require('express'));const app=(cov_275r02uds8().s[2]++,express());// utilities
const errorHandler=(cov_275r02uds8().s[3]++,require('./middleware/error-handler'));// configuration
const{NODE_ENV,PORT}=(cov_275r02uds8().s[4]++,require('./config'));const morganOption=(cov_275r02uds8().s[5]++,NODE_ENV==='production'?(cov_275r02uds8().b[0][0]++,'tiny'):(cov_275r02uds8().b[0][1]++,'common'));// middleware
// const express = require('express');
const morgan=(cov_275r02uds8().s[6]++,require('morgan'));const cors=(cov_275r02uds8().s[7]++,require('cors'));const helmet=(cov_275r02uds8().s[8]++,require('helmet'));// create express server
// const app = express(); // const app = require('./app');
// initialize the middleware
cov_275r02uds8().s[9]++;app.use(errorHandler);cov_275r02uds8().s[10]++;app.use(morgan(morganOption));cov_275r02uds8().s[11]++;app.use(cors());cov_275r02uds8().s[12]++;app.use(helmet());// routers
const UsersRouter=(cov_275r02uds8().s[13]++,require('./users/users-router'));const FactsRouter=(cov_275r02uds8().s[14]++,require('./facts/facts-router'));const AuthRouter=(cov_275r02uds8().s[15]++,require('./auth/auth-router'));const ReportsRouter=(cov_275r02uds8().s[16]++,require('./reports/reports-router'));// initialize routes
cov_275r02uds8().s[17]++;app.use('/api/users',UsersRouter);cov_275r02uds8().s[18]++;app.use('/api/facts',FactsRouter);cov_275r02uds8().s[19]++;app.use('/api/auth',AuthRouter);cov_275r02uds8().s[20]++;app.use('/api/reports',ReportsRouter);// "oven is hot" means "it's listening"
cov_275r02uds8().s[21]++;app.listen(PORT,()=>{cov_275r02uds8().f[0]++;cov_275r02uds8().s[22]++;console.log(`The oven is hot on PORT ${PORT}`);});// basic root path to confirm server is running
cov_275r02uds8().s[23]++;app.get('/',(req,res)=>{cov_275r02uds8().f[1]++;cov_275r02uds8().s[24]++;res.status(200).send('This is the Department of Truth and Facts Api Service');});cov_275r02uds8().s[25]++;module.exports=app;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiY29uZmlnIiwiZXhwcmVzcyIsImFwcCIsImVycm9ySGFuZGxlciIsIk5PREVfRU5WIiwiUE9SVCIsIm1vcmdhbk9wdGlvbiIsIm1vcmdhbiIsImNvcnMiLCJoZWxtZXQiLCJ1c2UiLCJVc2Vyc1JvdXRlciIsIkZhY3RzUm91dGVyIiwiQXV0aFJvdXRlciIsIlJlcG9ydHNSb3V0ZXIiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIiwiZ2V0IiwicmVxIiwicmVzIiwic3RhdHVzIiwic2VuZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJ5c0ZBZVk7bUhBZlo7QUFFQTtBQUNBQSxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCQyxNQUFsQixHQUVBLEtBQU1DLENBQUFBLE9BQU8sMEJBQUdGLE9BQU8sQ0FBQyxTQUFELENBQVYsQ0FBYixDQUNBLEtBQU1HLENBQUFBLEdBQUcsMEJBQU9ELE9BQU8sRUFBZCxDQUFULENBRUE7QUFDQSxLQUFNRSxDQUFBQSxZQUFZLDBCQUFHSixPQUFPLENBQUMsNEJBQUQsQ0FBVixDQUFsQixDQUVBO0FBQ0EsS0FBTSxDQUFFSyxRQUFGLENBQVlDLElBQVosMkJBQXNCTixPQUFPLENBQUMsVUFBRCxDQUE3QixDQUFOLENBQ0EsS0FBTU8sQ0FBQUEsWUFBWSwwQkFBVUYsUUFBUSxHQUFLLFlBQWIsNkJBQTRCLE1BQTVCLDhCQUFxQyxRQUFyQyxDQUFWLENBQWxCLENBRUE7QUFDQTtBQUNBLEtBQU1HLENBQUFBLE1BQU0sMEJBQUlSLE9BQU8sQ0FBQyxRQUFELENBQVgsQ0FBWixDQUNBLEtBQU1TLENBQUFBLElBQUksMEJBQU1ULE9BQU8sQ0FBQyxNQUFELENBQWIsQ0FBVixDQUNBLEtBQU1VLENBQUFBLE1BQU0sMEJBQUlWLE9BQU8sQ0FBQyxRQUFELENBQVgsQ0FBWixDQUVBO0FBQ0E7QUFFQTt3QkFDQUcsR0FBRyxDQUFDUSxHQUFKLENBQVFQLFlBQVIsRSx5QkFDQUQsR0FBRyxDQUFDUSxHQUFKLENBQVFILE1BQU0sQ0FBQ0QsWUFBRCxDQUFkLEUseUJBQ0FKLEdBQUcsQ0FBQ1EsR0FBSixDQUFRRixJQUFJLEVBQVosRSx5QkFDQU4sR0FBRyxDQUFDUSxHQUFKLENBQVFELE1BQU0sRUFBZCxFQUVBO0FBQ0EsS0FBTUUsQ0FBQUEsV0FBVywyQkFBS1osT0FBTyxDQUFDLHNCQUFELENBQVosQ0FBakIsQ0FDQSxLQUFNYSxDQUFBQSxXQUFXLDJCQUFLYixPQUFPLENBQUMsc0JBQUQsQ0FBWixDQUFqQixDQUNBLEtBQU1jLENBQUFBLFVBQVUsMkJBQU1kLE9BQU8sQ0FBQyxvQkFBRCxDQUFiLENBQWhCLENBQ0EsS0FBTWUsQ0FBQUEsYUFBYSwyQkFBR2YsT0FBTyxDQUFDLDBCQUFELENBQVYsQ0FBbkIsQ0FFQTt5QkFDQUcsR0FBRyxDQUFDUSxHQUFKLENBQVEsWUFBUixDQUFzQkMsV0FBdEIsRSx5QkFDQVQsR0FBRyxDQUFDUSxHQUFKLENBQVEsWUFBUixDQUFzQkUsV0FBdEIsRSx5QkFDQVYsR0FBRyxDQUFDUSxHQUFKLENBQVEsV0FBUixDQUFxQkcsVUFBckIsRSx5QkFDQVgsR0FBRyxDQUFDUSxHQUFKLENBQVEsY0FBUixDQUF3QkksYUFBeEIsRUFFQTt5QkFDQVosR0FBRyxDQUFDYSxNQUFKLENBQVdWLElBQVgsQ0FBaUIsSUFBTSxrREFDckJXLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLDJCQUEwQlosSUFBSyxFQUE1QyxFQUNELENBRkQsRUFJQTt5QkFDQUgsR0FBRyxDQUFDZ0IsR0FBSixDQUFRLEdBQVIsQ0FBYSxDQUFDQyxHQUFELENBQU1DLEdBQU4sR0FBYyxrREFDekJBLEdBQUcsQ0FDRUMsTUFETCxDQUNZLEdBRFosRUFFS0MsSUFGTCxDQUVVLHVEQUZWLEVBR0QsQ0FKRCxFLHlCQU1BQyxNQUFNLENBQUNDLE9BQVAsQ0FBaUJ0QixHQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIHNlcnZlciBlbnRyeSBwb2ludFxuXG4vLyB1c2UgZW52IGZpbGVcbnJlcXVpcmUoJ2RvdGVudicpLmNvbmZpZygpO1xuXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3QgYXBwICAgICA9IGV4cHJlc3MoKTtcblxuLy8gdXRpbGl0aWVzXG5jb25zdCBlcnJvckhhbmRsZXIgPSByZXF1aXJlKCcuL21pZGRsZXdhcmUvZXJyb3ItaGFuZGxlcicpO1xuXG4vLyBjb25maWd1cmF0aW9uXG5jb25zdCB7IE5PREVfRU5WLCBQT1JUIH0gID0gcmVxdWlyZSgnLi9jb25maWcnKTtcbmNvbnN0IG1vcmdhbk9wdGlvbiAgICAgICAgPSBOT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nID8gJ3RpbnknIDogJ2NvbW1vbic7XG5cbi8vIG1pZGRsZXdhcmVcbi8vIGNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCBtb3JnYW4gID0gcmVxdWlyZSgnbW9yZ2FuJyk7XG5jb25zdCBjb3JzICAgID0gcmVxdWlyZSgnY29ycycpO1xuY29uc3QgaGVsbWV0ICA9IHJlcXVpcmUoJ2hlbG1ldCcpO1xuXG4vLyBjcmVhdGUgZXhwcmVzcyBzZXJ2ZXJcbi8vIGNvbnN0IGFwcCA9IGV4cHJlc3MoKTsgLy8gY29uc3QgYXBwID0gcmVxdWlyZSgnLi9hcHAnKTtcblxuLy8gaW5pdGlhbGl6ZSB0aGUgbWlkZGxld2FyZVxuYXBwLnVzZShlcnJvckhhbmRsZXIpO1xuYXBwLnVzZShtb3JnYW4obW9yZ2FuT3B0aW9uKSk7XG5hcHAudXNlKGNvcnMoKSk7XG5hcHAudXNlKGhlbG1ldCgpKTtcblxuLy8gcm91dGVyc1xuY29uc3QgVXNlcnNSb3V0ZXIgICA9IHJlcXVpcmUoJy4vdXNlcnMvdXNlcnMtcm91dGVyJyk7XG5jb25zdCBGYWN0c1JvdXRlciAgID0gcmVxdWlyZSgnLi9mYWN0cy9mYWN0cy1yb3V0ZXInKTtcbmNvbnN0IEF1dGhSb3V0ZXIgICAgPSByZXF1aXJlKCcuL2F1dGgvYXV0aC1yb3V0ZXInKTtcbmNvbnN0IFJlcG9ydHNSb3V0ZXIgPSByZXF1aXJlKCcuL3JlcG9ydHMvcmVwb3J0cy1yb3V0ZXInKTtcblxuLy8gaW5pdGlhbGl6ZSByb3V0ZXNcbmFwcC51c2UoJy9hcGkvdXNlcnMnLCBVc2Vyc1JvdXRlcik7XG5hcHAudXNlKCcvYXBpL2ZhY3RzJywgRmFjdHNSb3V0ZXIpO1xuYXBwLnVzZSgnL2FwaS9hdXRoJywgQXV0aFJvdXRlcik7XG5hcHAudXNlKCcvYXBpL3JlcG9ydHMnLCBSZXBvcnRzUm91dGVyKTtcblxuLy8gXCJvdmVuIGlzIGhvdFwiIG1lYW5zIFwiaXQncyBsaXN0ZW5pbmdcIlxuYXBwLmxpc3RlbihQT1JULCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKGBUaGUgb3ZlbiBpcyBob3Qgb24gUE9SVCAke1BPUlR9YCk7XG59KTtcblxuLy8gYmFzaWMgcm9vdCBwYXRoIHRvIGNvbmZpcm0gc2VydmVyIGlzIHJ1bm5pbmdcbmFwcC5nZXQoJy8nLCAocmVxLCByZXMpID0+IHtcbiAgcmVzXG4gICAgICAuc3RhdHVzKDIwMClcbiAgICAgIC5zZW5kKCdUaGlzIGlzIHRoZSBEZXBhcnRtZW50IG9mIFRydXRoIGFuZCBGYWN0cyBBcGkgU2VydmljZScpXG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBhcHA7Il19